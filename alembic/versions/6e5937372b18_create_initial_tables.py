"""Create initial tables

Revision ID: 6e5937372b18
Revises: 
Create Date: 2025-08-01 18:05:37.963418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e5937372b18'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('crs_id', sa.Integer(), nullable=False),
    sa.Column('crs_title', sa.String(), nullable=False),
    sa.Column('crs_code', sa.String(), nullable=False),
    sa.Column('credits', sa.Numeric(), nullable=False),
    sa.Column('department', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('crs_id')
    )
    op.create_index(op.f('ix_courses_crs_code'), 'courses', ['crs_code'], unique=True)
    op.create_index(op.f('ix_courses_crs_id'), 'courses', ['crs_id'], unique=False)
    op.create_index(op.f('ix_courses_crs_title'), 'courses', ['crs_title'], unique=True)
    op.create_table('users',
    sa.Column('usr_id', sa.Integer(), nullable=False),
    sa.Column('usr_name', sa.String(), nullable=False),
    sa.Column('usr_password', sa.String(), nullable=False),
    sa.Column('usr_is_admin', sa.Boolean(), nullable=True),
    sa.Column('usr_is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('usr_id')
    )
    op.create_index(op.f('ix_users_usr_id'), 'users', ['usr_id'], unique=False)
    op.create_index(op.f('ix_users_usr_name'), 'users', ['usr_name'], unique=True)
    op.create_table('students',
    sa.Column('std_id', sa.Integer(), nullable=False),
    sa.Column('std_name', sa.String(), nullable=False),
    sa.Column('std_email', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.usr_id'], ),
    sa.PrimaryKeyConstraint('std_id'),
    sa.UniqueConstraint('std_email')
    )
    op.create_index(op.f('ix_students_std_id'), 'students', ['std_id'], unique=False)
    op.create_table('enrollments',
    sa.Column('enr_id', sa.Integer(), nullable=False),
    sa.Column('std_id', sa.Integer(), nullable=False),
    sa.Column('crs_id', sa.Integer(), nullable=False),
    sa.Column('enr_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crs_id'], ['courses.crs_id'], ),
    sa.ForeignKeyConstraint(['std_id'], ['students.std_id'], ),
    sa.PrimaryKeyConstraint('enr_id')
    )
    op.create_index(op.f('ix_enrollments_crs_id'), 'enrollments', ['crs_id'], unique=False)
    op.create_index(op.f('ix_enrollments_enr_id'), 'enrollments', ['enr_id'], unique=False)
    op.create_index(op.f('ix_enrollments_std_id'), 'enrollments', ['std_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_enrollments_std_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_enr_id'), table_name='enrollments')
    op.drop_index(op.f('ix_enrollments_crs_id'), table_name='enrollments')
    op.drop_table('enrollments')
    op.drop_index(op.f('ix_students_std_id'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_users_usr_name'), table_name='users')
    op.drop_index(op.f('ix_users_usr_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_courses_crs_title'), table_name='courses')
    op.drop_index(op.f('ix_courses_crs_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_crs_code'), table_name='courses')
    op.drop_table('courses')
    # ### end Alembic commands ###
